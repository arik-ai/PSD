# -*- coding: utf-8 -*-
"""Untitled11.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VeWwoYSjVNRxZVnrvvZjc9ptd_kOyScz
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer

data = pd.read_csv('water_potability.csv')
print("Data Awal:")
data.head()

data.info()

data.isnull().sum()

# handle missing value with average of features
data["ph"].fillna(value = data["ph"].mean(), inplace = True)
data["Sulfate"].fillna(value = data["Sulfate"].mean(), inplace = True)
data["Trihalomethanes"].fillna(value = data["Trihalomethanes"].mean(), inplace = True)

data.isnull().sum()

data.head()

X = data.drop("Potability", axis = 1).values
y = data["Potability"].values

# train test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 3)
print("X_train",X_train.shape)
print("X_test",X_test.shape)
print("y_train",y_train.shape)
print("y_test",y_test.shape)

# min-max normalization
x_train_max = np.max(X_train)
x_train_min = np.min(X_train)
X_train = (X_train - x_train_min)/(x_train_max-x_train_min)
X_test = (X_test - x_train_min)/(x_train_max-x_train_min)

from sklearn.neighbors import KNeighborsClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.svm import SVC
from sklearn import metrics

K = 5
clf = KNeighborsClassifier(K)
clf.fit(X_train,y_train.ravel())
y_pred = clf.predict(X_test)

print("Accuracy : ", metrics.accuracy_score(y_test, y_pred))

# evaluasi model
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
print("Akurasi model KNN:", accuracy_score(y_test, y_pred))
print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred))
print("Classification Report:")
print(classification_report(y_test, y_pred))